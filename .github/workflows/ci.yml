name: CI-SpringBoot Microservices

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 7 * * 5"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-buildx-action@v2
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Run unit tests
        run: mvn -pl coreservice,paymentservice,authservice,deliveryservice test -Punit-tests

      - name: Package microservices
        run: mvn -B package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        if: github.event_name == 'push'
        run: |
          for service in coreservice paymentservice authservice deliveryservice; do
            IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/$service
            echo "Building and pushing $IMAGE:latest"
            docker build -t $IMAGE:latest $service
            docker push $IMAGE:latest
          done

  integration-tests:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      # Install MySQL client tools
      - name: Install MySQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client

      - name: Wait for MySQL
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -ptest --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "MySQL not ready yet... retrying ($i/30)"
            sleep 2
          done
          
          # Verify we can actually connect and query
          mysql -h 127.0.0.1 -uroot -ptest -e "SELECT 1;" testdb

      - name: Run Integration Tests
        run: mvn -pl coreservice,paymentservice,authservice,deliveryservice verify -Pintegration-tests
        env:
          # Make database connection details available to tests
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_NAME: testdb
          DB_USER: root
          DB_PASSWORD: test