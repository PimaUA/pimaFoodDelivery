name: CI-SpringBoot Microservices

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 7 * * 5"
  workflow_dispatch:

env:
  SERVICES: "coreservice,paymentservice,authservice,deliveryservice"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Set up Docker buildx
      - uses: docker/setup-buildx-action@v3

      # Set up Java and Maven cache
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      # Run unit tests for all services
      - name: Run Unit Tests
        run: mvn test -Punit-tests -pl ${{ env.SERVICES }}

      # Package microservices (skip tests)
      - name: Package Microservices
        run: mvn clean package -DskipTests -pl ${{ env.SERVICES }}

      # Log in to Docker Hub (only on push)
      - name: Log in to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Build and push Docker image
      - name: Build and Push Docker Images
        if: github.event_name == 'push'
        run: |
          for service in ${SERVICES//,/ }; do
            dockerfile="./$service/Dockerfile"
            if [[ -f "$dockerfile" ]]; then
              IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/$service:latest
              echo "Building and pushing $IMAGE"
              docker build -t "$IMAGE" "./$service"
              docker push "$IMAGE"
            else
              echo "No Dockerfile for $service, skipping..."
            fi
          done
        shell: bash

  integration-tests:
    runs-on: ubuntu-latest
    needs: build
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Set up Java and Maven cache
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      # Install MySQL client
      - name: Install MySQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
        shell: bash

      # Wait for MySQL and setup database
      - name: Wait for MySQL and Setup Database
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h mysql -uroot -ptest --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "MySQL not ready yet... retrying ($i/30)"
            sleep 2
          done

          echo "Creating test database..."
          mysql -h mysql -uroot -ptest -e "
            CREATE DATABASE IF NOT EXISTS testdb;
            GRANT ALL PRIVILEGES ON testdb.* TO 'root'@'%';
            FLUSH PRIVILEGES;
          "
        shell: bash

      # Run integration tests
      - name: Run Integration Tests
        env:
          SPRING_PROFILES_ACTIVE: integration-test
          SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/testdb
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: test
        run: mvn test -Pintegration-tests -pl ${{ env.SERVICES }}
        shell: bash

